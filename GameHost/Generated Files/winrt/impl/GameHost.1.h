// WARNING: Please don't edit this file. It was generated by C++/WinRT v1.0.180821.2

#pragma once
#include "winrt/impl/Windows.UI.Xaml.Data.0.h"
#include "winrt/impl/Windows.UI.Xaml.Interop.0.h"
#include "winrt/impl/Windows.UI.Xaml.Markup.0.h"
#include "winrt/impl/Windows.UI.Xaml.Media.0.h"
#include "winrt/impl/Windows.UI.Composition.0.h"
#include "winrt/impl/Windows.UI.Xaml.0.h"
#include "winrt/impl/Windows.UI.Xaml.Controls.0.h"
#include "winrt/impl/GameHost.0.h"

WINRT_EXPORT namespace winrt::GameHost {

struct WINRT_EBO IActinidiaGame :
    Windows::Foundation::IInspectable,
    impl::consume_t<IActinidiaGame>
{
    IActinidiaGame(std::nullptr_t = nullptr) noexcept {}
};

struct WINRT_EBO IActinidiaGameFactory :
    Windows::Foundation::IInspectable,
    impl::consume_t<IActinidiaGameFactory>
{
    IActinidiaGameFactory(std::nullptr_t = nullptr) noexcept {}
};

struct WINRT_EBO IDirectXPage :
    Windows::Foundation::IInspectable,
    impl::consume_t<IDirectXPage>
{
    IDirectXPage(std::nullptr_t = nullptr) noexcept {}
};

struct WINRT_EBO IMainPage :
    Windows::Foundation::IInspectable,
    impl::consume_t<IMainPage>
{
    IMainPage(std::nullptr_t = nullptr) noexcept {}
};

}
